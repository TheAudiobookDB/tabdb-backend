openapi: "3.0.0"
info:
  title: "The Audiobook Database"
  description: "This document constitutes the official API documentation for The Audiobook Database.<br>Users are granted a non-exclusive, non-transferable license to access and use the API solely for lawful and responsible purposes.<br>In order to safeguard our services and data, strict rate limiting is enforced, which may vary according to the user's login status.<br>By using this API, you agree unconditionally to adhere to all specified conditions.<br>You may incorporate the provided data into your projects only if its use strictly complies with these terms.<br>Any attempt to misuse the API or the data—including, but not limited to, data redistribution, data modification, or any form of commercial — will be considered a material breach of these conditions.<br>Under no circumstances shall the data be employed to generate any form of financial gain, either directly or indirectly, by you or any affiliated party.<br>Access to the API is contingent upon your complete compliance with these terms; any violation may result in the immediate termination of access and the initiation of all available legal remedies.<br>By proceeding, you confirm that you fully understand and agree to these terms.<br><br>You are allowed to use the API for personal projects or non-commercial purposes, provided that you do not exceed the rate limits and do not violate any other terms of use.<br>"
components:
  responses:
    Forbidden:
      description: "Access token is missing or invalid"
    Accepted:
      description: "The request was accepted"
    Created:
      description: "The resource has been created"
    NotFound:
      description: "The resource has been created"
    NotAcceptable:
      description: "The resource has been created"
  securitySchemes:
    BearerAuth:
      type: "http"
      scheme: "bearer"
    BasicAuth:
      type: "http"
      scheme: "basic"
    ApiKeyAuth:
      type: "apiKey"
      in: "header"
      name: "X-API-Key"
  schemas:
    Any:
      description: "Any JSON object not defined as schema"
    PaginationMeta:
      type: "object"
      properties:
        total:
          type: "number"
          example: 100
          nullable: false
        page:
          type: "number"
          example: 2
          nullable: false
        perPage:
          type: "number"
          example: 10
          nullable: false
        currentPage:
          type: "number"
          example: 3
          nullable: false
        lastPage:
          type: "number"
          example: 10
          nullable: false
        firstPage:
          type: "number"
          example: 1
          nullable: false
        lastPageUrl:
          type: "string"
          example: "/?page=10"
          nullable: false
        firstPageUrl:
          type: "string"
          example: "/?page=1"
          nullable: false
        nextPageUrl:
          type: "string"
          example: "/?page=6"
          nullable: false
        previousPageUrl:
          type: "string"
          example: "/?page=5"
          nullable: false
    AccessTokenInterface:
      type: "object"
      properties:
        type:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
        name:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
        token:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
        abilities:
          type: "array"
          items:
            type: "string"
            nullable: false
            example: "Lorem Ipsum"
        lastUsedAt:
          type: "string"
          nullable: false
          format: "date"
          example: "2021-03-23"
        expiredAt:
          type: "string"
          nullable: false
          format: "date"
          example: "2021-03-23"
      required:
        - "type"
        - "token"
        - "abilities"
      description: "AccessTokenInterface (Interface)"
    TooManyRequests:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            nullable: false
            $ref: "#/components/schemas/TooManyRequestsResponse"
      required:
        - "errors"
      description: "TooManyRequests (Interface)"
    TooManyRequestsResponse:
      type: "object"
      properties:
        message:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
        retryAfter:
          type: "number"
          nullable: false
          example: 413
      required:
        - "message"
        - "retryAfter"
      description: "TooManyRequestsResponse (Interface)"
    ValidationInterface:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            nullable: false
            $ref: "#/components/schemas/ValidationError"
      required:
        - "errors"
      description: "ValidationInterface (Interface)"
    ValidationError:
      type: "object"
      properties:
        field:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
        rule:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
        message:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
      required:
        - "field"
        - "rule"
        - "message"
      description: "ValidationError (Interface)"
    RequestResponse:
      type: "object"
      properties:
        message:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
        id:
          type: "string"
          nullable: false
          example: "Lorem Ipsum"
      required:
        - "message"
        - "id"
      description: "RequestResponse (Interface)"
    Author:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        name:
          type: "string"
          example: "John Doe"
        description:
          type: "string"
          example: "Lorem ipsum dolor sit amet"
        image:
          type: "string"
          example: "Lorem Ipsum"
        books:
          type: "array"
          items:
            $ref: "#/components/schemas/Book"
            example: null
        identifiers:
          type: "array"
          items:
            $ref: "#/components/schemas/Identifier"
            example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
      description: "Author (Model)"
    Book:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        title:
          type: "string"
          example: "Lorem Ipsum"
        subtitle:
          type: "string"
          example: "Lorem Ipsum"
        summary:
          type: "string"
          example: "Lorem Ipsum"
        description:
          type: "string"
          example: "Lorem ipsum dolor sit amet"
        publisher:
          type: "string"
          example: "Lorem Ipsum"
        image:
          type: "string"
          example: "Lorem Ipsum"
        language:
          type: "string"
          example: "Lorem Ipsum"
        copyright:
          type: "string"
          example: "Lorem Ipsum"
        pages:
          type: "number"
          example: 871
        duration:
          type: "number"
          example: 285
        released_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        is_explicit:
          type: "boolean"
          example: true
        is_abridged:
          type: "boolean"
          example: true
        group_id:
          type: "number"
          example: 654
        type:
          type: "string"
          example: "book"
          enum:
            - "book"
            - "audiobook"
            - "podcast"
            - "e-book"
        authors:
          type: "array"
          items:
            $ref: "#/components/schemas/Author"
            example: null
        narrators:
          type: "array"
          items:
            $ref: "#/components/schemas/Narrator"
            example: null
        genres:
          type: "array"
          items:
            $ref: "#/components/schemas/Genre"
            example: null
        identifiers:
          type: "array"
          items:
            $ref: "#/components/schemas/Identifier"
            example: null
        series:
          type: "array"
          items:
            $ref: "#/components/schemas/Series"
            example: null
        tracks:
          type: "array"
          items:
            $ref: "#/components/schemas/Track"
            example: null
        group:
          $ref: "#/components/schemas/BookGroup"
          example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
      description: "Book (Model)"
    BookGroup:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        name:
          type: "string"
          example: "John Doe"
        books:
          type: "array"
          items:
            $ref: "#/components/schemas/Book"
            example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
      description: "BookGroup (Model)"
    Genre:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        name:
          type: "string"
          example: "John Doe"
        type:
          $ref: "#/components/schemas/'genre'"
          example: null
        books:
          type: "array"
          items:
            $ref: "#/components/schemas/Book"
            example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
      description: "Genre (Model)"
    Identifier:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        value:
          type: "string"
          example: "Lorem Ipsum"
        type:
          $ref: "#/components/schemas/'audible"
          example: null
        books:
          type: "array"
          items:
            $ref: "#/components/schemas/Book"
            example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
      description: "Identifier (Model)"
    Log:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        action:
          $ref: "#/components/schemas/LogAction"
          example: null
        model:
          $ref: "#/components/schemas/LogModel"
          example: null
        model_id:
          type: "string"
          example: "Lorem Ipsum"
        data:
          $ref: "#/components/schemas/object"
          example: null
        user_id:
          type: "number"
          example: 712
        state:
          $ref: "#/components/schemas/LogState"
          example: null
        user:
          $ref: "#/components/schemas/User"
          example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
      description: "Log (Model)"
    Narrator:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        name:
          type: "string"
          example: "John Doe"
        description:
          type: "string"
          example: "Lorem ipsum dolor sit amet"
        image:
          type: "string"
          example: "Lorem Ipsum"
        books:
          type: "array"
          items:
            $ref: "#/components/schemas/Book"
            example: null
        identifiers:
          type: "array"
          items:
            $ref: "#/components/schemas/Identifier"
            example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        role:
          type: "string"
          example: "Lorem Ipsum"
      description: "Narrator (Model)"
    Series:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        name:
          type: "string"
          example: "John Doe"
        description:
          type: "string"
          example: "Lorem ipsum dolor sit amet"
        image:
          type: "string"
          example: "Lorem Ipsum"
        identifiers:
          type: "array"
          items:
            $ref: "#/components/schemas/Identifier"
            example: null
        books:
          type: "array"
          items:
            $ref: "#/components/schemas/Book"
            example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        position:
          type: "number"
          example: 844
      description: "Series (Model)"
    Track:
      type: "object"
      required: []
      properties:
        public_id:
          type: "string"
          example: "Lorem Ipsum"
        name:
          type: "string"
          example: "John Doe"
        start:
          type: "number"
          example: 867
        end:
          type: "number"
          example: 55
        book:
          $ref: "#/components/schemas/Book"
          example: null
      description: "Track (Model)"
    User:
      type: "object"
      required: []
      properties:
        id:
          type: "number"
          example: 381
        full_name:
          type: "string"
          example: "John Doe"
        email:
          type: "string"
          example: "johndoe@example.com"
          format: "email"
        logs:
          type: "array"
          items:
            $ref: "#/components/schemas/Log"
            example: null
        created_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
        updated_at:
          type: "string"
          example: "2021-03-23T16:13:08.489+01:00"
          format: "date-time"
      description: "User (Model)"
    storeLoginValidator:
      type: "object"
      properties:
        email:
          type: "string"
          example: "Lorem Ipsum"
          required: true
      example:
        email: "Lorem Ipsum"
      description: "storeLoginValidator (Validator)"
    createBookValidator:
      type: "object"
      properties:
        title:
          type: "string"
          example: "Lorem Ipsum"
          required: true
          minLength: 3
          maxLength: 1023
        subtitle:
          type: "string"
          example: "Lorem Ipsum"
          minLength: 3
          maxLength: 1023
        description:
          type: "string"
          example: "Lorem Ipsum"
        summary:
          type: "string"
          example: "Lorem Ipsum"
        publisher:
          type: "string"
          example: "Lorem Ipsum"
          maxLength: 1023
        language:
          type: "string"
          example: "Lorem Ipsum"
        copyright:
          type: "string"
          example: "Lorem Ipsum"
          maxLength: 255
        pages:
          type: "number"
          example: 653
        duration:
          type: "number"
          example: 591
        releasedAt:
          type: "number"
          example: 721
        isExplicit:
          type: "boolean"
          example: true
        isAbridged:
          type: "boolean"
          example: true
        groupId:
          type: "number"
          example: 535
        image:
          type: "number"
          example: 15
        type:
          type: "number"
          example: 168
          choices:
            - "book"
            - "audiobook"
            - "podcast"
            - "e-book"
        genres:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "number"
                example: 406
                pattern: "/^[a-zA-Z0-9_-]{16}$/"
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
              type:
                type: "number"
                example: 648
                choices:
                  - "genre"
                  - "tag"
          properties:
            items:
              id:
                type: "string"
                example: "Lorem Ipsum"
              name:
                type: "string"
                example: "Lorem Ipsum"
        authors:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "number"
                example: 232
                pattern: "/^[a-zA-Z0-9_-]{16}$/"
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
              description:
                type: "number"
                example: 293
              image:
                type: "number"
                example: 379
              identifiers:
                type: "array"
                items:
                  type: "number"
                  example: 926
                  maximum: 5
          properties:
            items:
              id:
                type: "string"
                example: "Lorem Ipsum"
              name:
                type: "string"
                example: "Lorem Ipsum"
              description:
                type: "string"
                example: "Lorem Ipsum"
              image:
                type: "string"
                example: "Lorem Ipsum"
        narrators:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "number"
                example: 778
                pattern: "/^[a-zA-Z0-9_-]{16}$/"
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
              description:
                type: "number"
                example: 705
              image:
                type: "number"
                example: 759
              role:
                type: "number"
                example: 181
                maximum: 255
              identifiers:
                type: "array"
                items:
                  type: "number"
                  example: 743
                  maximum: 5
          properties:
            items:
              id:
                type: "string"
                example: "Lorem Ipsum"
              name:
                type: "string"
                example: "Lorem Ipsum"
              description:
                type: "string"
                example: "Lorem Ipsum"
              image:
                type: "string"
                example: "Lorem Ipsum"
              role:
                type: "string"
                example: "Lorem Ipsum"
        identifiers:
          type: "array"
          items:
            type: "number"
            example: 662
            maximum: 5
        series:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "number"
                example: 419
                pattern: "/^[a-zA-Z0-9_-]{16}$/"
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
              description:
                type: "number"
                example: 412
              image:
                type: "number"
                example: 612
              position:
                type: "number"
                example: 230
              identifiers:
                type: "array"
                items:
                  type: "number"
                  example: 232
                  maximum: 5
          properties:
            items:
              id:
                type: "string"
                example: "Lorem Ipsum"
              name:
                type: "string"
                example: "Lorem Ipsum"
              description:
                type: "string"
                example: "Lorem Ipsum"
              image:
                type: "string"
                example: "Lorem Ipsum"
              position:
                type: "string"
                example: "Lorem Ipsum"
        tracks:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "number"
                example: 668
                pattern: "/^[a-zA-Z0-9_-]{16}$/"
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
              start:
                type: "number"
                example: 256
              end:
                type: "number"
                example: 94
          properties:
            items:
              id:
                type: "string"
                example: "Lorem Ipsum"
              name:
                type: "string"
                example: "Lorem Ipsum"
      example:
        title: "Lorem Ipsum"
        subtitle: "Lorem Ipsum"
        description: "Lorem Ipsum"
        summary: "Lorem Ipsum"
        publisher: "Lorem Ipsum"
        language: "Lorem Ipsum"
        copyright: "Lorem Ipsum"
        pages: 653
        duration: 591
        releasedAt: 721
        isExplicit: true
        isAbridged: true
        groupId: 535
        image: 15
        type: 168
        genres:
          - id: "Lorem Ipsum"
            name: "Lorem Ipsum"
            type: 648
        authors:
          - id: "Lorem Ipsum"
            name: "Lorem Ipsum"
            description: "Lorem Ipsum"
            image: "Lorem Ipsum"
            identifiers:
              - 926
        narrators:
          - id: "Lorem Ipsum"
            name: "Lorem Ipsum"
            description: "Lorem Ipsum"
            image: "Lorem Ipsum"
            role: "Lorem Ipsum"
            identifiers:
              - 743
        identifiers:
          - 662
        series:
          - id: "Lorem Ipsum"
            name: "Lorem Ipsum"
            description: "Lorem Ipsum"
            image: "Lorem Ipsum"
            position: "Lorem Ipsum"
            identifiers:
              - 232
        tracks:
          - id: "Lorem Ipsum"
            name: "Lorem Ipsum"
            start: 256
            end: 94
      description: "createBookValidator (Validator)"
    getBookValidator:
      type: "object"
      properties:
        id:
          type: "string"
          example: "Lorem Ipsum"
          pattern: "/^[a-zA-Z0-9_-]{16}$/"
          required: true
      example:
        id: "Lorem Ipsum"
      description: "getBookValidator (Validator)"
    audiMetaAuthorValidator:
      type: "object"
      properties:
        asin:
          type: "string"
          example: "Lorem Ipsum"
          pattern: "/^[0-9a-zA-Z]{10}$|^[0-9]{11,12}$/"
          required: true
        name:
          type: "string"
          example: "Lorem Ipsum"
          required: true
          minLength: 3
          maxLength: 255
        description:
          type: "string"
          example: "Lorem Ipsum"
        image:
          type: "string"
          example: "Lorem Ipsum"
      example:
        asin: "Lorem Ipsum"
        name: "Lorem Ipsum"
        description: "Lorem Ipsum"
        image: "Lorem Ipsum"
      description: "audiMetaAuthorValidator (Validator)"
    audiMetaBookValidator:
      type: "object"
      properties:
        asin:
          type: "string"
          example: "Lorem Ipsum"
          required: true
          minLength: 10
          maxLength: 11
        title:
          type: "string"
          example: "Lorem Ipsum"
          required: true
          maxLength: 1023
        subtitle:
          type: "string"
          example: "Lorem Ipsum"
          maxLength: 1023
        copyright:
          type: "string"
          example: "Lorem Ipsum"
          maxLength: 1023
        description:
          type: "string"
          example: "Lorem Ipsum"
        summary:
          type: "string"
          example: "Lorem Ipsum"
        bookFormat:
          type: "number"
          example: 721
          choices:
            - "abridged"
            - "unabridged"
            - "original_recording"
        lengthMinutes:
          type: "number"
          example: 482
        imageUrl:
          type: "string"
          example: "Lorem Ipsum"
        explicit:
          type: "boolean"
          example: true
        isbn:
          type: "string"
          example: "Lorem Ipsum"
          minLength: 10
          maxLength: 13
        language:
          type: "string"
          example: "Lorem Ipsum"
        publisher:
          type: "string"
          example: "Lorem Ipsum"
          maxLength: 1023
        releaseDate:
          type: "string"
          example: "Lorem Ipsum"
        series:
          type: "array"
          items:
            type: "object"
            properties:
              asin:
                type: "number"
                example: 581
                pattern: "/^[0-9a-zA-Z]{10}$|^[0-9]{11,12}$/"
                required: true
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
                required: true
              position:
                type: "number"
                example: 877
                maximum: 255
          properties:
            items:
              asin:
                type: "string"
                example: "Lorem Ipsum"
              name:
                type: "string"
                example: "Lorem Ipsum"
              position:
                type: "string"
                example: "Lorem Ipsum"
        authors:
          type: "array"
          items:
            type: "object"
            properties:
              asin:
                type: "number"
                example: 837
                required: true
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
                required: true
          properties:
            items:
              name:
                type: "string"
                example: "Lorem Ipsum"
        narrators:
          type: "array"
          items:
            type: "object"
            properties:
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
                required: true
          properties:
            items:
              name:
                type: "string"
                example: "Lorem Ipsum"
        genres:
          type: "array"
          items:
            type: "object"
            properties:
              asin:
                type: "number"
                example: 90
                pattern: "/^[0-9a-zA-Z]{10}$|^[0-9]{11,12}$/"
                required: true
              name:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
                required: true
              type:
                type: "number"
                example: 51
                choices:
                  - "Genres"
                  - "Tags"
          properties:
            items:
              asin:
                type: "string"
                example: "Lorem Ipsum"
              name:
                type: "string"
                example: "Lorem Ipsum"
      example:
        asin: "Lorem Ipsum"
        title: "Lorem Ipsum"
        subtitle: "Lorem Ipsum"
        copyright: "Lorem Ipsum"
        description: "Lorem Ipsum"
        summary: "Lorem Ipsum"
        bookFormat: 721
        lengthMinutes: 482
        imageUrl: "Lorem Ipsum"
        explicit: true
        isbn: "Lorem Ipsum"
        language: "Lorem Ipsum"
        publisher: "Lorem Ipsum"
        releaseDate: "Lorem Ipsum"
        series:
          - asin: "Lorem Ipsum"
            name: "Lorem Ipsum"
            position: "Lorem Ipsum"
        authors:
          - asin: 837
            name: "Lorem Ipsum"
        narrators:
          - name: "Lorem Ipsum"
        genres:
          - asin: "Lorem Ipsum"
            name: "Lorem Ipsum"
            type: 51
      description: "audiMetaBookValidator (Validator)"
    audiMetaSeriesValidator:
      type: "object"
      properties:
        asin:
          type: "string"
          example: "Lorem Ipsum"
          pattern: "/^[0-9a-zA-Z]{10}$|^[0-9]{11,12}$/"
          required: true
        title:
          type: "string"
          example: "Lorem Ipsum"
          required: true
          minLength: 3
          maxLength: 255
        description:
          type: "string"
          example: "Lorem Ipsum"
      example:
        asin: "Lorem Ipsum"
        title: "Lorem Ipsum"
        description: "Lorem Ipsum"
      description: "audiMetaSeriesValidator (Validator)"
    audiMetaTrackValidator:
      type: "object"
      properties:
        brandIntroDurationMs:
          type: "number"
          example: 442
        brandOutroDurationMs:
          type: "number"
          example: 591
        is_accurate:
          type: "boolean"
          example: true
        runtime_length_ms:
          type: "number"
          example: 539
        runtime_length:
          type: "string"
          example: "Lorem Ipsum"
        chapters:
          type: "array"
          items:
            type: "object"
            properties:
              title:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
                required: true
              startOffsetMs:
                type: "number"
                example: 966
                required: true
              startOffsetSec:
                type: "number"
                example: 936
              lengthMs:
                type: "number"
                example: 800
                required: true
          required: true
          properties:
            items:
              title:
                type: "string"
                example: "Lorem Ipsum"
      example:
        brandIntroDurationMs: 442
        brandOutroDurationMs: 591
        is_accurate: true
        runtime_length_ms: 539
        runtime_length: "Lorem Ipsum"
        chapters:
          - title: "Lorem Ipsum"
            startOffsetMs: 966
            startOffsetSec: 936
            lengthMs: 800
      description: "audiMetaTrackValidator (Validator)"
    audiobookshelfValidator:
      type: "object"
      properties:
        title:
          type: "string"
          example: "Lorem Ipsum"
          required: true
          minLength: 3
          maxLength: 255
        subtitle:
          type: "string"
          example: "Lorem Ipsum"
          minLength: 3
          maxLength: 255
        tags:
          type: "array"
          items:
            type: "number"
            example: 751
          properties:
            items:
              type: "string"
              example: "Lorem Ipsum"
        genres:
          type: "array"
          items:
            type: "number"
            example: 856
          properties:
            items:
              type: "string"
              example: "Lorem Ipsum"
        authors:
          type: "array"
          items:
            type: "number"
            example: 453
          properties:
            items:
              type: "string"
              example: "Lorem Ipsum"
        narrators:
          type: "array"
          items:
            type: "number"
            example: 490
          properties:
            items:
              type: "string"
              example: "Lorem Ipsum"
        series:
          type: "array"
          items:
            type: "number"
            example: 287
          properties:
            items:
              type: "string"
              example: "Lorem Ipsum"
        chapters:
          type: "array"
          items:
            type: "object"
            properties:
              start:
                type: "number"
                example: 889
                required: true
              end:
                type: "number"
                example: 30
                required: true
              title:
                type: "number"
                example: 3
                minimum: 3
                maximum: 255
                required: true
          properties:
            items:
              title:
                type: "string"
                example: "Lorem Ipsum"
        publishedYear:
          type: "string"
          example: "Lorem Ipsum"
        publisher:
          type: "string"
          example: "Lorem Ipsum"
        description:
          type: "string"
          example: "Lorem Ipsum"
        isbn:
          type: "string"
          example: "Lorem Ipsum"
        asin:
          type: "string"
          example: "Lorem Ipsum"
        language:
          type: "string"
          example: "Lorem Ipsum"
        explicit:
          type: "boolean"
          example: true
        abridged:
          type: "boolean"
          example: true
      example:
        title: "Lorem Ipsum"
        subtitle: "Lorem Ipsum"
        tags:
          - "Lorem Ipsum"
        genres:
          - "Lorem Ipsum"
        authors:
          - "Lorem Ipsum"
        narrators:
          - "Lorem Ipsum"
        series:
          - "Lorem Ipsum"
        chapters:
          - start: 889
            end: 30
            title: "Lorem Ipsum"
        publishedYear: "Lorem Ipsum"
        publisher: "Lorem Ipsum"
        description: "Lorem Ipsum"
        isbn: "Lorem Ipsum"
        asin: "Lorem Ipsum"
        language: "Lorem Ipsum"
        explicit: true
        abridged: true
      description: "audiobookshelfValidator (Validator)"
    authorValidator:
      type: "object"
      properties:
        id:
          type: "string"
          example: "Lorem Ipsum"
          pattern: "/^[a-zA-Z0-9_-]{16}$/"
        name:
          type: "string"
          example: "Lorem Ipsum"
          minLength: 3
          maxLength: 255
        description:
          type: "string"
          example: "Lorem Ipsum"
        image:
          type: "string"
          example: "Lorem Ipsum"
        identifiers:
          type: "array"
          items:
            type: "number"
            example: 389
            maximum: 5
      example:
        id: "Lorem Ipsum"
        name: "Lorem Ipsum"
        description: "Lorem Ipsum"
        image: "Lorem Ipsum"
        identifiers:
          - 389
      description: "authorValidator (Validator)"
    genreValidator:
      type: "object"
      properties:
        id:
          type: "string"
          example: "Lorem Ipsum"
          pattern: "/^[a-zA-Z0-9_-]{16}$/"
        name:
          type: "string"
          example: "Lorem Ipsum"
          minLength: 3
          maxLength: 255
        type:
          type: "number"
          example: 336
          choices:
            - "genre"
            - "tag"
      example:
        id: "Lorem Ipsum"
        name: "Lorem Ipsum"
        type: 336
      description: "genreValidator (Validator)"
    getIdPaginationValidator:
      type: "object"
      properties:
        id:
          type: "string"
          example: "Lorem Ipsum"
          pattern: "/^[a-zA-Z0-9_-]{16}$/"
          required: true
        page:
          type: "number"
          example: 1
          maximum: 20
          minimum: 1
        limit:
          type: "number"
          example: 1
          maximum: 50
          minimum: 1
      example:
        id: "Lorem Ipsum"
        page: 1
        limit: 1
      description: "getIdPaginationValidator (Validator)"
    getIdValidator:
      type: "object"
      properties:
        id:
          type: "string"
          example: "Lorem Ipsum"
          pattern: "/^[a-zA-Z0-9_-]{16}$/"
          required: true
      example:
        id: "Lorem Ipsum"
      description: "getIdValidator (Validator)"
paths:
  /login/{email}:
    get:
      summary: "Confirms the login (create)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/auth_controller.ts_ - **create**"
      operationId: "confirmLogin"
      parameters:
        - in: "path"
          name: "email"
          schema:
            type: "string"
          required: true
      tags:
        - "LOGIN"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenInterface"
              example:
                type: "Lorem Ipsum"
                name: "Lorem Ipsum"
                token: "Lorem Ipsum"
                abilities:
                  - "Lorem Ipsum"
                lastUsedAt: "2021-03-23"
                expiredAt: "2021-03-23"
          description: "Returns **200** (OK) as **application/json**"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security: []
  /login:
    post:
      summary: "Sends an email to the user with a link to log in (store)"
      description: "Sends an email to the user with a link to log in\n\n _app/controllers/auth_controller.ts_ - **store**"
      operationId: "login"
      parameters: []
      tags:
        - "LOGIN"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Email sent successfully"
              example:
                message: "Email sent successfully"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security: []
  /book/{id}:
    get:
      summary: "Get a book by ID (get)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/books_controller.ts_ - **get**"
      operationId: "getBook"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "BOOK"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
              example:
                public_id: "Lorem Ipsum"
                title: "Lorem Ipsum"
                subtitle: "Lorem Ipsum"
                summary: "Lorem Ipsum"
                description: "Lorem ipsum dolor sit amet"
                publisher: "Lorem Ipsum"
                image: "Lorem Ipsum"
                language: "Lorem Ipsum"
                copyright: "Lorem Ipsum"
                pages: 871
                duration: 285
                released_at: "2021-03-23T16:13:08.489+01:00"
                is_explicit: true
                is_abridged: true
                group_id: 654
                type: "book"
                authors:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    description: "Lorem ipsum dolor sit amet"
                    image: "Lorem Ipsum"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                narrators:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    description: "Lorem ipsum dolor sit amet"
                    image: "Lorem Ipsum"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                    role: "Lorem Ipsum"
                genres:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                identifiers:
                  - public_id: "Lorem Ipsum"
                    value: "Lorem Ipsum"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                series:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    description: "Lorem ipsum dolor sit amet"
                    image: "Lorem Ipsum"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                    position: 844
                tracks:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    start: 867
                    end: 55
                group:
                  public_id: "Lorem Ipsum"
                  name: "John Doe"
                  created_at: "2021-03-23T16:13:08.489+01:00"
                  updated_at: "2021-03-23T16:13:08.489+01:00"
                created_at: "2021-03-23T16:13:08.489+01:00"
                updated_at: "2021-03-23T16:13:08.489+01:00"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /book/tracks/{id}:
    get:
      summary: " (getTracksForBook)"
      description: "\n\n _app/controllers/tracks_controller.ts_ - **getTracksForBook**"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "BOOK"
      responses:
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
  /books:
    post:
      summary: "Create a new book (create)"
      description: "Creates a new book and (optionally) its relations (authors, narrators, genres, identifiers, series, tracks).\n\n _app/controllers/books_controller.ts_ - **create**"
      operationId: "createBook"
      parameters: []
      tags:
        - "BOOKS"
      responses:
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createBookValidator"
            example:
              title: "Lorem Ipsum"
              subtitle: "Lorem Ipsum"
              description: "Lorem Ipsum"
              summary: "Lorem Ipsum"
              publisher: "Lorem Ipsum"
              language: "Lorem Ipsum"
              copyright: "Lorem Ipsum"
              pages: 653
              duration: 591
              releasedAt: 721
              isExplicit: true
              isAbridged: true
              groupId: 535
              image: 15
              type: 168
              genres:
                - id: "Lorem Ipsum"
                  name: "Lorem Ipsum"
                  type: 648
              authors:
                - id: "Lorem Ipsum"
                  name: "Lorem Ipsum"
                  description: "Lorem Ipsum"
                  image: "Lorem Ipsum"
                  identifiers:
                    - 926
              narrators:
                - id: "Lorem Ipsum"
                  name: "Lorem Ipsum"
                  description: "Lorem Ipsum"
                  image: "Lorem Ipsum"
                  role: "Lorem Ipsum"
                  identifiers:
                    - 743
              identifiers:
                - 662
              series:
                - id: "Lorem Ipsum"
                  name: "Lorem Ipsum"
                  description: "Lorem Ipsum"
                  image: "Lorem Ipsum"
                  position: "Lorem Ipsum"
                  identifiers:
                    - 232
              tracks:
                - id: "Lorem Ipsum"
                  name: "Lorem Ipsum"
                  start: 256
                  end: 94
  /books/abs:
    post:
      summary: "Create a new book from ABS (abs)"
      description: "Creates a new book that supports the Audiobookshelf `metadata.json` format.\n\n _app/controllers/books_controller.ts_ - **abs**"
      operationId: "createBookABS"
      parameters: []
      tags:
        - "BOOKS"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
              example:
                public_id: "Lorem Ipsum"
                title: "Lorem Ipsum"
                subtitle: "Lorem Ipsum"
                summary: "Lorem Ipsum"
                description: "Lorem ipsum dolor sit amet"
                publisher: "Lorem Ipsum"
                image: "Lorem Ipsum"
                language: "Lorem Ipsum"
                copyright: "Lorem Ipsum"
                pages: 871
                duration: 285
                released_at: "2021-03-23T16:13:08.489+01:00"
                is_explicit: true
                is_abridged: true
                group_id: 654
                type: "book"
                created_at: "2021-03-23T16:13:08.489+01:00"
                updated_at: "2021-03-23T16:13:08.489+01:00"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/audiobookshelfValidator"
            example:
              title: "Lorem Ipsum"
              subtitle: "Lorem Ipsum"
              tags:
                - "Lorem Ipsum"
              genres:
                - "Lorem Ipsum"
              authors:
                - "Lorem Ipsum"
              narrators:
                - "Lorem Ipsum"
              series:
                - "Lorem Ipsum"
              chapters:
                - start: 889
                  end: 30
                  title: "Lorem Ipsum"
              publishedYear: "Lorem Ipsum"
              publisher: "Lorem Ipsum"
              description: "Lorem Ipsum"
              isbn: "Lorem Ipsum"
              asin: "Lorem Ipsum"
              language: "Lorem Ipsum"
              explicit: true
              abridged: true
  /author/{id}:
    get:
      summary: "Get an author by ID (get)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/authors_controller.ts_ - **get**"
      operationId: "getAuthor"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "AUTHOR"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
              example:
                public_id: "Lorem Ipsum"
                name: "John Doe"
                description: "Lorem ipsum dolor sit amet"
                image: "Lorem Ipsum"
                identifiers:
                  - public_id: "Lorem Ipsum"
                    value: "Lorem Ipsum"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                created_at: "2021-03-23T16:13:08.489+01:00"
                updated_at: "2021-03-23T16:13:08.489+01:00"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /author/books/{id}:
    get:
      summary: "Get books by author ID (books)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/authors_controller.ts_ - **books**"
      operationId: "getBooksByAuthor"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          minimum: 1
          maximum: 10
          schema:
            type: "integer"
            default: 1
        - name: "limit"
          in: "query"
          description: "Number of items per page"
          required: false
          minimum: 1
          maximum: 50
          schema:
            type: "integer"
            default: 10
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "AUTHOR"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Book"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    title: "Lorem Ipsum"
                    subtitle: "Lorem Ipsum"
                    summary: "Lorem Ipsum"
                    description: "Lorem ipsum dolor sit amet"
                    publisher: "Lorem Ipsum"
                    image: "Lorem Ipsum"
                    language: "Lorem Ipsum"
                    copyright: "Lorem Ipsum"
                    pages: 871
                    duration: 285
                    released_at: "2021-03-23T16:13:08.489+01:00"
                    is_explicit: true
                    is_abridged: true
                    group_id: 654
                    type: "book"
                    authors:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    narrators:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        role: "Lorem Ipsum"
                    genres:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    series:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        position: 844
                    tracks:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        start: 867
                        end: 55
                    group:
                      public_id: "Lorem Ipsum"
                      name: "John Doe"
                      created_at: "2021-03-23T16:13:08.489+01:00"
                      updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /narrator/{id}:
    get:
      summary: "Get an narrator by ID (get)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/narrators_controller.ts_ - **get**"
      operationId: "getNarrator"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "NARRATOR"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Narrator"
              example:
                public_id: "Lorem Ipsum"
                name: "John Doe"
                description: "Lorem ipsum dolor sit amet"
                image: "Lorem Ipsum"
                identifiers:
                  - public_id: "Lorem Ipsum"
                    value: "Lorem Ipsum"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                created_at: "2021-03-23T16:13:08.489+01:00"
                updated_at: "2021-03-23T16:13:08.489+01:00"
                role: "Lorem Ipsum"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /narrator/books/{id}:
    get:
      summary: "Get books by narrator ID (books)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/narrators_controller.ts_ - **books**"
      operationId: "getBooksByNarrator"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          minimum: 1
          maximum: 10
          schema:
            type: "integer"
            default: 1
        - name: "limit"
          in: "query"
          description: "Number of items per page"
          required: false
          minimum: 1
          maximum: 50
          schema:
            type: "integer"
            default: 10
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "NARRATOR"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Book"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    title: "Lorem Ipsum"
                    subtitle: "Lorem Ipsum"
                    summary: "Lorem Ipsum"
                    description: "Lorem ipsum dolor sit amet"
                    publisher: "Lorem Ipsum"
                    image: "Lorem Ipsum"
                    language: "Lorem Ipsum"
                    copyright: "Lorem Ipsum"
                    pages: 871
                    duration: 285
                    released_at: "2021-03-23T16:13:08.489+01:00"
                    is_explicit: true
                    is_abridged: true
                    group_id: 654
                    type: "book"
                    authors:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    narrators:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        role: "Lorem Ipsum"
                    genres:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    series:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        position: 844
                    tracks:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        start: 867
                        end: 55
                    group:
                      public_id: "Lorem Ipsum"
                      name: "John Doe"
                      created_at: "2021-03-23T16:13:08.489+01:00"
                      updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /series/{id}:
    get:
      summary: "Get a series by ID (get)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/series_controller.ts_ - **get**"
      operationId: "getSeries"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "SERIES"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Series"
              example:
                public_id: "Lorem Ipsum"
                name: "John Doe"
                description: "Lorem ipsum dolor sit amet"
                image: "Lorem Ipsum"
                identifiers:
                  - public_id: "Lorem Ipsum"
                    value: "Lorem Ipsum"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                created_at: "2021-03-23T16:13:08.489+01:00"
                updated_at: "2021-03-23T16:13:08.489+01:00"
                position: 844
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /series/books/{id}:
    get:
      summary: "Get books by series ID (books)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/series_controller.ts_ - **books**"
      operationId: "getBooksBySeries"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          minimum: 1
          maximum: 10
          schema:
            type: "integer"
            default: 1
        - name: "limit"
          in: "query"
          description: "Number of items per page"
          required: false
          minimum: 1
          maximum: 50
          schema:
            type: "integer"
            default: 10
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "SERIES"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Book"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    title: "Lorem Ipsum"
                    subtitle: "Lorem Ipsum"
                    summary: "Lorem Ipsum"
                    description: "Lorem ipsum dolor sit amet"
                    publisher: "Lorem Ipsum"
                    image: "Lorem Ipsum"
                    language: "Lorem Ipsum"
                    copyright: "Lorem Ipsum"
                    pages: 871
                    duration: 285
                    released_at: "2021-03-23T16:13:08.489+01:00"
                    is_explicit: true
                    is_abridged: true
                    group_id: 654
                    type: "book"
                    authors:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    narrators:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        role: "Lorem Ipsum"
                    genres:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    series:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        position: 844
                    tracks:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        start: 867
                        end: 55
                    group:
                      public_id: "Lorem Ipsum"
                      name: "John Doe"
                      created_at: "2021-03-23T16:13:08.489+01:00"
                      updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /genre/{id}:
    get:
      summary: "Get an genre by ID (get)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/genres_controller.ts_ - **get**"
      operationId: "getGenre"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "GENRE"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
              example:
                public_id: "Lorem Ipsum"
                name: "John Doe"
                type: {}
                created_at: "2021-03-23T16:13:08.489+01:00"
                updated_at: "2021-03-23T16:13:08.489+01:00"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /genre/books/{id}:
    get:
      summary: "Get books by genre ID (books)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/genres_controller.ts_ - **books**"
      operationId: "getBooksByGenre"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          minimum: 1
          maximum: 10
          schema:
            type: "integer"
            default: 1
        - name: "limit"
          in: "query"
          description: "Number of items per page"
          required: false
          minimum: 1
          maximum: 50
          schema:
            type: "integer"
            default: 10
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "GENRE"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Book"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    title: "Lorem Ipsum"
                    subtitle: "Lorem Ipsum"
                    summary: "Lorem Ipsum"
                    description: "Lorem ipsum dolor sit amet"
                    publisher: "Lorem Ipsum"
                    image: "Lorem Ipsum"
                    language: "Lorem Ipsum"
                    copyright: "Lorem Ipsum"
                    pages: 871
                    duration: 285
                    released_at: "2021-03-23T16:13:08.489+01:00"
                    is_explicit: true
                    is_abridged: true
                    group_id: 654
                    type: "book"
                    authors:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    narrators:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        role: "Lorem Ipsum"
                    genres:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    series:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        position: 844
                    tracks:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        start: 867
                        end: 55
                    group:
                      public_id: "Lorem Ipsum"
                      name: "John Doe"
                      created_at: "2021-03-23T16:13:08.489+01:00"
                      updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /track/{id}:
    get:
      summary: "Get tracks for a book by ID (get)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/tracks_controller.ts_ - **get**"
      operationId: "getTracksForBook"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          minimum: 1
          maximum: 10
          schema:
            type: "integer"
            default: 1
        - name: "limit"
          in: "query"
          description: "Number of items per page"
          required: false
          minimum: 1
          maximum: 50
          schema:
            type: "integer"
            default: 10
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "TRACK"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Track"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    start: 867
                    end: 55
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /search/book:
    get:
      summary: "Search for a book (book)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/searches_controller.ts_ - **book**"
      operationId: "searchBook"
      parameters:
        - in: "query"
          name: "title"
          description: "The title of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "subtitle"
          description: "The subtitle of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "keywords"
          description: "The keywords to search for in the book. Will return books that can be far away from the wanted results. Do not use keywords if you are using some kind of automatching. It will match to broadly. You can try to contain it with other paramters. Note: title will overwrite the keywords, but still searches more broadly. So do not use title and keywords together unless you know what you want"
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "author"
          description: "The author of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "narrator"
          description: "The narrator of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "genre"
          description: "The genre of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "series"
          description: "The series of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "publisher"
          description: "The publisher of the book to search for. Note: This must be an exact match!"
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "language"
          description: "The language of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "type"
          description: "The type of the book to search for."
          schema:
            example: "book"
            type: "string"
            enum:
              - "book"
              - "audiobook"
              - "podcast"
          required: false
        - in: "query"
          name: "isExplicit"
          description: "Indicates whether to filter for explicit books. Note: This filter is applied *after* the search query is executed. If no results are returned, it means that no books matching both the search criteria and the explicit filter were found on that page. It does *not* imply that no such books exist at all."
          schema:
            example: ""
            type: "boolean"
          required: false
        - in: "query"
          name: "isAbridged"
          description: "Indicates whether to filter for abridged books. Note: This filter is applied *after* the search query is executed. If no results are returned, it means that no books matching both the search criteria and the abridged filter were found on that page. It does *not* imply that no such books exist at all."
          schema:
            example: ""
            type: "boolean"
          required: false
        - in: "query"
          name: "releasedAfter"
          description: "The date after which the book was released. Note: This filter is applied *after* the search query is executed. If no results are returned, it means that no books matching both the search criteria and the releasedAfter filter were found on that page. It does *not* imply that no such books exist at all."
          schema:
            example: ""
            type: "date"
          required: false
        - in: "query"
          name: "releasedBefore"
          description: "The date before which the book was released. Note: This filter is applied *after* the search query is executed. If no results are returned, it means that no books matching both the search criteria and the releasedBefore filter were found on that page. It does *not* imply that no such books exist at all."
          schema:
            example: ""
            type: "date"
          required: false
        - in: "query"
          name: "page"
          description: "The page number to return."
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "threshold"
          description: "The threshold for the ranking score."
          schema:
            example: ""
            type: "number"
          required: false
      tags:
        - "SEARCH"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Book"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    title: "Lorem Ipsum"
                    subtitle: "Lorem Ipsum"
                    summary: "Lorem Ipsum"
                    description: "Lorem ipsum dolor sit amet"
                    publisher: "Lorem Ipsum"
                    image: "Lorem Ipsum"
                    language: "Lorem Ipsum"
                    copyright: "Lorem Ipsum"
                    pages: 871
                    duration: 285
                    released_at: "2021-03-23T16:13:08.489+01:00"
                    is_explicit: true
                    is_abridged: true
                    group_id: 654
                    type: "book"
                    authors:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    narrators:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        role: "Lorem Ipsum"
                    genres:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    series:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        position: 844
                    tracks:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        start: 867
                        end: 55
                    group:
                      public_id: "Lorem Ipsum"
                      name: "John Doe"
                      created_at: "2021-03-23T16:13:08.489+01:00"
                      updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /search/author:
    get:
      summary: "Search for an author (author)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/searches_controller.ts_ - **author**"
      operationId: "searchAuthor"
      parameters:
        - in: "query"
          name: "title"
          description: "The title of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "subtitle"
          description: "The subtitle of the book to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "keywords"
          description: "The keywords to search for to search an author. Takes description and name into account. Can find authors that are not close to your input"
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "page"
          description: "The page number to return."
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "threshold"
          description: "The threshold for the ranking score."
          schema:
            example: ""
            type: "number"
          required: false
      tags:
        - "SEARCH"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Book"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    title: "Lorem Ipsum"
                    subtitle: "Lorem Ipsum"
                    summary: "Lorem Ipsum"
                    description: "Lorem ipsum dolor sit amet"
                    publisher: "Lorem Ipsum"
                    image: "Lorem Ipsum"
                    language: "Lorem Ipsum"
                    copyright: "Lorem Ipsum"
                    pages: 871
                    duration: 285
                    released_at: "2021-03-23T16:13:08.489+01:00"
                    is_explicit: true
                    is_abridged: true
                    group_id: 654
                    type: "book"
                    authors:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    narrators:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        role: "Lorem Ipsum"
                    genres:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    series:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        position: 844
                    tracks:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        start: 867
                        end: 55
                    group:
                      public_id: "Lorem Ipsum"
                      name: "John Doe"
                      created_at: "2021-03-23T16:13:08.489+01:00"
                      updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /search/narrator:
    get:
      summary: "Search for a narrator (narrator)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/searches_controller.ts_ - **narrator**"
      operationId: "searchNarrator"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the narrator to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "keywords"
          description: "The keywords to search for a narrator."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "page"
          description: "The page number to return."
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "threshold"
          description: "The threshold for the ranking score."
          schema:
            example: ""
            type: "number"
          required: false
      tags:
        - "SEARCH"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Narrator"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    description: "Lorem ipsum dolor sit amet"
                    image: "Lorem Ipsum"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                    role: "Lorem Ipsum"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /search/genre:
    get:
      summary: "Search for a genre (genre)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/searches_controller.ts_ - **genre**"
      operationId: "searchGenre"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the genre to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "type"
          description: "The type of the genre to search for."
          schema:
            example: "tag"
            type: "string"
            enum:
              - "tag"
              - "genre"
          required: false
        - in: "query"
          name: "page"
          description: "The page number to return."
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "threshold"
          description: "The threshold for the ranking score."
          schema:
            example: ""
            type: "number"
          required: false
      tags:
        - "SEARCH"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Genre"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    type: {}
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /search/series:
    get:
      summary: "Search for a series (series)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/searches_controller.ts_ - **series**"
      operationId: "searchSeries"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the series to search for."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "keywords"
          description: "The keywords to search for a series."
          schema:
            example: ""
            type: "string"
          required: false
        - in: "query"
          name: "page"
          description: "The page number to return."
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "threshold"
          description: "The threshold for the ranking score."
          schema:
            example: ""
            type: "number"
          required: false
      tags:
        - "SEARCH"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Series"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    name: "John Doe"
                    description: "Lorem ipsum dolor sit amet"
                    image: "Lorem Ipsum"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                    position: 844
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /create/confirm:
    get:
      summary: "Enables a disabled book (create)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/controllers/confirms_controller.ts_ - **create**"
      operationId: "createDisabledBook"
      parameters:
        - in: "query"
          name: "signature"
          description: "The signature of the request"
          schema:
            example: null
            type: "string"
          required: false
        - in: "query"
          name: "model"
          description: "The model type (book)"
          schema:
            example: "book"
            type: "string"
          required: false
        - in: "query"
          name: "id"
          description: "The id of the book"
          schema:
            example: null
            type: "string"
          required: false
      tags:
        - "CREATE"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Book"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - public_id: "Lorem Ipsum"
                    title: "Lorem Ipsum"
                    subtitle: "Lorem Ipsum"
                    summary: "Lorem Ipsum"
                    description: "Lorem ipsum dolor sit amet"
                    publisher: "Lorem Ipsum"
                    image: "Lorem Ipsum"
                    language: "Lorem Ipsum"
                    copyright: "Lorem Ipsum"
                    pages: 871
                    duration: 285
                    released_at: "2021-03-23T16:13:08.489+01:00"
                    is_explicit: true
                    is_abridged: true
                    group_id: 654
                    type: "book"
                    authors:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    narrators:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        role: "Lorem Ipsum"
                    genres:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    identifiers:
                      - public_id: "Lorem Ipsum"
                        value: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                    series:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        description: "Lorem ipsum dolor sit amet"
                        image: "Lorem Ipsum"
                        created_at: "2021-03-23T16:13:08.489+01:00"
                        updated_at: "2021-03-23T16:13:08.489+01:00"
                        position: 844
                    tracks:
                      - public_id: "Lorem Ipsum"
                        name: "John Doe"
                        start: 867
                        end: 55
                    group:
                      public_id: "Lorem Ipsum"
                      name: "John Doe"
                      created_at: "2021-03-23T16:13:08.489+01:00"
                      updated_at: "2021-03-23T16:13:08.489+01:00"
                    created_at: "2021-03-23T16:13:08.489+01:00"
                    updated_at: "2021-03-23T16:13:08.489+01:00"
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /request:
    post:
      summary: "Requests a new Model depending on the provider (index)"
      description: "The following providers and types are supported:\\n- Audible: book, author, tracks, series\n\n _app/controllers/requests_controller.ts_ - **index**"
      operationId: "request"
      parameters: []
      tags:
        - "REQUEST"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestResponse"
              example:
                message: "Lorem Ipsum"
                id: "Lorem Ipsum"
          description: "Returns **200** (OK) as **application/json**"
          headers:
            x-ratelimit-limit:
              description: "Total amount of requests"
              schema:
                type: "integer"
                example: 150
            x-ratelimit-remaining:
              description: "Remaining amount of requests"
              schema:
                type: "integer"
                example: 100
            x-request-id:
              description: "Request ID"
              schema:
                type: "string"
                example: "1234567890"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        422:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationInterface"
              example:
                errors:
                  - field: "Lorem Ipsum"
                    rule: "Lorem Ipsum"
                    message: "Lorem Ipsum"
          description: "Returns **422** (Unprocessable Entity) as **application/json**"
        429:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequests"
              example:
                errors:
                  - message: "Lorem Ipsum"
                    retryAfter: 413
          description: "Returns **429** (Too Many Requests) as **application/json**"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/indexRequestValidator"
            example: {}
tags:
  - name: "LOGIN"
    description: "Everything related to LOGIN"
  - name: "BOOK"
    description: "Everything related to BOOK"
  - name: "BOOKS"
    description: "Everything related to BOOKS"
  - name: "AUTHOR"
    description: "Everything related to AUTHOR"
  - name: "NARRATOR"
    description: "Everything related to NARRATOR"
  - name: "SERIES"
    description: "Everything related to SERIES"
  - name: "GENRE"
    description: "Everything related to GENRE"
  - name: "TRACK"
    description: "Everything related to TRACK"
  - name: "SEARCH"
    description: "Everything related to SEARCH"
  - name: "CREATE"
    description: "Everything related to CREATE"
  - name: "REQUEST"
    description: "Everything related to REQUEST"

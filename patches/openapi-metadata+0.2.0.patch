diff --git a/node_modules/openapi-metadata/dist/decorators/index.d.mts b/node_modules/openapi-metadata/dist/decorators/index.d.mts
index 4f177b0..54ee7c1 100644
--- a/node_modules/openapi-metadata/dist/decorators/index.d.mts
+++ b/node_modules/openapi-metadata/dist/decorators/index.d.mts
@@ -92,7 +92,7 @@ type ApiQueryOptions = Omit<OperationParameterMetadata, "in">;
  */
 declare function ApiQuery(options: ApiQueryOptions): (target: Object, propertyKey?: string | symbol) => void;
 
-type ApiResponseOptions = SetOptional<OperationResponseMetadata, "status" | "mediaType">;
+export type ApiResponseOptions = SetOptional<OperationResponseMetadata, "status" | "mediaType">;
 /**
  * Configures a response.
  * Can be applied to Controllers and Operations.
diff --git a/node_modules/openapi-metadata/dist/index.mjs b/node_modules/openapi-metadata/dist/index.mjs
index b46abeb..d3235be 100644
--- a/node_modules/openapi-metadata/dist/index.mjs
+++ b/node_modules/openapi-metadata/dist/index.mjs
@@ -114,7 +114,12 @@ async function loadType(context, options) {
     return;
   }
   const thunk = isThunk(options.type);
-  const value = thunk ? options.type(context) : options.type;
+  let value;
+  try {
+    value = thunk ? options.type(context) : options.type;
+  } catch(e) {
+    value = options.type
+  }
   for (const loader of [PrimitiveTypeLoader, ArrayTypeLoader, ...context.typeLoaders, ClassTypeLoader]) {
     const result = await loader(context, value, options.type);
     if (result) {
